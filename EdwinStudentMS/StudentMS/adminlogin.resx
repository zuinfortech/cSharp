<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxIREhUTEhMWFhIXFxgbFRgXGBkYGhcdHRcWGBgbGRYZ
        HSkgGBslHxUaJTEhJykrLi4uGB8zODMvNyktLiv/2wBDAQoKCg4NDhoQEBotJiAjLS0tLS0tLS0tLS0r
        LS0tLS8tLS8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3/wAARCADgAOADASIAAhEBAxEB/8QA
        HAABAAICAwEAAAAAAAAAAAAAAAYHBAUCAwgB/8QATxAAAQMCAgYFBQoMBQMFAQAAAQACAwQRBSEGBxIx
        QVETImFxgTJCUpGhIyRicpKisbLB0RQVJVNUY3N0gpOzwjM0NUPwg6PhF0Rkw9MW/8QAGQEAAgMBAAAA
        AAAAAAAAAAAAAAQBAgMF/8QAMREAAgIBAwIEBAYBBQAAAAAAAAECAxEEITESQRMyUWEiM4HwFCM0cZGx
        4QUkQqHR/9oADAMBAAIRAxEAPwC8UREAEREAEREAERafFNKKKmymqI2uHmg7TvkNufYpSb2RDaRuEVeY
        hrZpWZQxSynmQI2+27vmqN1+tmrd/hRQxjt2pD67gexMR0lsuxR2xRc6Lz1Wac4jL5VU8DkwNZ7WgH2r
        TVOIzSf4k0r/AI8jnfSVstBLu0Ud69D0tNWxM8uRjfjOA+krCk0lom76unHfKz715p6o5exZEdO93ksc
        e5pP0BafgIrmRHjP0PRX/wDV0H6ZT/zmfesiDHaSTyKmF3dIw/QV5x/F835mX+W/7ljzM2fLFvjC30o/
        AR7SDxn6HqVkgdmCCOw3XJeWYJSw3Y4tPNpt7QtvR6U10XkVc3c55ePU+4VJf6e+0iVeu6PR6KjaLWhi
        EdtsxSjjtssfWwgexSTD9b0ZsJ6Z7e2Nwf8ANds/SVjLR2rtkurYss5FGsM07w+fJtQ1jvRkvGfW6wPg
        VI2PDhcEEHcRmD4peUZR5RdNPg5IiKpIREQAREQAREQARQnT3To4e9sMcQfK5m3dxsxoLnNFwM3HqnLL
        vVU43pbW1dxNM7YPmM6jO4tHlD4xKaq0k7FnhGcrUti6sa03oaW4fMHPHmR9d3cdnJviQoLi+tuV1xTQ
        NYPSlO0fkNIA9ZVfYZhk1Q7YgifIeTGkgd53N8SFN8H1U1UljUSMhb6I90f42IaPWU14FFXnefv0Muuc
        uCK4rpPWVN+mqJHNPmg7DfkMsD43Wto6SSU7MUbnu5MaXH1NCvHCdW2HwWLozM7nKdofIFm+sFbCv0lw
        6hGw6WJlv9uMXI/6cYJHqR+LivhqiHhPmTKlw7VziM2ZibEOcrwPmt2nesKTUGqDjPVeEbP7nH+1ZGJ6
        3IhcU9O9/wAKRwYPU3aJ9iiuIay8RlvsvZEP1bBf1v2j6rI/3U/Rff1D8te5YNHqvw5ltpskp5vkI9ke
        yFluwvB6Xy2UbCPznRk+t5JVIVuL1E1+lnlffg57iPk3t7FghoG4KfwtkvPNkeIlwi/DplhMPkzRD9mw
        u+o0rofrPw0bpJD3RSfaAqLRStDX3bDxpF4f+qWH85f5Z+9d0esnDH5GZw+NFJb6pColc4IXSO2WNc93
        otBcfUM1L0NXqw8aRfBxHBanJzqN5PB4jB+eAVxn0BwucXbC0cjFI4D1Nds+xVXQaBYjNupyxp4yFrPm
        k7XsUjwvVRVNO06qZC7iYg9x+VdiXlXCHltx9+xdSb5ibWu1RQG/Q1EjDyeGvHs2So3iOqyujuYzFMPg
        u2HH+F+XzlLsRY7CYelmxKplO5kRER6R3K8jXuA5m+XqC0WG63JRlUU7HDnG4sPyXXBPiFaueoazB5RE
        lDvsQPE8Fqab/HgkjHNzTs/LHVPrXHDMWnpjeCZ8fxXEA97fJPiFduFaxMPqOqZOicfNmGyPl5s9q78T
        0Kw6rG10LAXZiSE7BPb1eq7xBV/xeNrYEeFneLIBg2tepjsKiNkzfSb7m/2XafUFPsC08oaqzWy9HIfM
        l6h7gb7LvAqE41qllbc0swkHoSdV3g8dUnwaoFiuET0ztioidGTu2hkfiuHVd4Eo8HT3eR4f32DqnDk9
        NovO+j+mVZR2EUu1GP8Abku9nhndvgQrv0Rxv8OpY6jY2C7aBbfasWuc02Nhkdm/ik7tNKrd8GsLFI3K
        IiXNAiIgCj9cT74gBygjHzpT9qz9VOi9LVslmqI+kLJA1rSTs+Q1xu0eV5XHJanWy6+JSdjIx82/2qZa
        kh70nP8A8g/0ovvXUnJx0yx7C0Vmzcl+I4pR0EY6R8cLM9hoAF7b9iNoud/AKB43rbAu2khvyfLkO8Rt
        NyO8hYeu53u9MOUcntc37lWyjTaWEoKct8k2WNPCN1jGllbVXEs79k+Yw7DO4tbbaHfdaQBfUT8YqKwk
        YNt8hERSARbTAtHaqtdaniLhexeeqxve85eAuexWXo/qohZZ1XIZXegy7GDvd5Tvm9yxs1FdfLLxg5cF
        T0VHJM7YijdI/wBFjS4+Ntw7Sprg2qyslsZ3MgbyPuj/AJLTsj5XgrhoMPigZsQxsjZyY0NHs3ntWUkL
        NdN+VYNo0ruQvCdWVBDYva6d3OR2XyG2bbvupbR0UcLdmKNkbeTGho9QXeiUnOU/MzVRS4C1Gk+kENBC
        ZZTnuYweU93Bo+08AuekWOw0MJmmOQya0eU93BrRz+jMnJUBpHj01dMZpj2MYPJjb6LftPE+AG2n07te
        XwUss6f3OGkGNzVszppj1jk1o8ljeDWjl9O9a5EXZilFYQo3kLOwrGKilO1TzPjPENPVPew9V3iFgopa
        TWGBZmA62Xts2siDx+ciyd4sJsfAjuVk0VVT11OHtAlgkByew2NiQbteOYKozQfRh2IThpuIGWMzhy4N
        B9J1vAXPf6Ap4GxsaxjQ1jQA1oyAAFgAOS5GrjXCWIcjNTk1ueeNN6KOCvqIomhsbXN2WjcLxsdlftcV
        bGqN18NZ2SS/XJ+1VnrNbbE6ntMf9GNWPqdd+T+6aT+0/at9Tvp4v9v6KV+dk5REXMGQiIgChNah/Kc3
        xYv6bVOtSo95S/vDv6UKgutP/U5u6L+kxTvUt/kpf3h39OJdO79LH6C8fmMjmut3vmAcoT7Xn7lXasLX
        X/m4f2P/ANj1XqZ0vyomdnmYRAFYWiOrKWe0tZtRRbxGMpHfG/Nj53cr2WxrWZMrGLk8IheD4RPVv6On
        jc93G2QaObnHJo7/AAVqaM6rYYrPrCJpPQFxGO/jJ42HYp1hmGw00YjhjbGwbg0e0neT2nNZa5l2snPa
        OyGYVJcnXDC1jQ1jQ1oFgGgAAcgBuXYiJM1CIiAC1+O4zFRwummdZo3Di48GtHEn/wA7lzxjFIqWJ00z
        tljRnzJ4Bo4uPAKgdLtJpcQm239WNtxFHfJg7ebjxPhuCY0+ndr9jOc+k6tKNIpq+Yyy5NFxGwHKNvIc
        ycrnj3AAahEXajFRWEKN5CIikAsrCsOkqZWQxNvI82HIcyTwaBmT2LFAV56ttEfwKLpZW++ZR1v1bd4Y
        O3i7tsOAWGouVUc9+xaEOpm+0YwKOhp2wx52ze7i9x8px+wcAAOC2yIuI228scSwUJrTH5Tm7RF/Tb9y
        nuph3vF/ZO/6kZUG1sD8pSfEj+r/AOFNtSp95y/vDv6cS6V36WP0MIfMZYKIi5gwEREAUNrWH5Sl7Wx/
        UA+xTXUmfec37wf6UKiGt5lsRPbDGfa8f2qV6kXe9qgfr7+uNn3Lp2/pV9BaPzDSa62++oD+pPse771C
        MIwmarkEUDC959TR6Tnbmt7ftyVs6wNFJsQq6cR9WNsbukkOYb1hYAec452HZmpbo9gEFFF0UDbDe5xz
        c883O4n2Dgqx1SrpilyS63KbNFoZoFBQ2kktLU+mR1WdkbTu+Nv7tymKIkJzlN5kzdJLZBERVJCIiACx
        cTxCOnidLM4NjYLuJ9gA4k7gOK51tYyFjpJHBrGi7nHcAqG050ufiEthdtOw+5s58Nt/wjy4A25k70UO
        2XsUnPpR0aZ6VS4hLtG7YWn3KPl8J3AvPs3DiTH0RdqMVFYQm3ndhERWAIikugmizsQns4EU7LGVwyvy
        YD6TreAueV6zmoLqZKWXhEl1UaI9I4Vs7eo0+4NPnOH+4RyB3dtzwCt1dcETWNDWgNa0ANAFgAMgAOAX
        YuHda7JdTHIxUVgIiLIsUTra/wBSf+zj+qpnqU/yc37wf6UShmtn/Un/ALOP6qmepT/JzfvB/pxLp3fp
        Y/QXj8wsNERcwYCIiAKW10R2rY3c4G+ySX71utR8nUqm8nRn1h4/tWDrvitNTO5xyD1OYf7ly1ISe61T
        ebIj6nSD+5dOW+k+/UXW1pbaIi5gwEREAEREAF1VM7Y2ue9waxoJc4mwAAuSTwC5yPDQSSAALknIAcST
        wVI6xNNjWuMEBIpWnM7umI84/AHAeJ4W2ppdssIpOaijF0+0ydXybEd20rD1RuMh9N4+hvDec90SRF24
        QUI9MRRtt5YREViAiIBfIAkncBmTyAHEoAzMHwySqmZBELvebdjRxc7k0DM/evQ+jmCR0UDYItwzc7i9
        x8px7T7BYcFotXOiQoYduQe+ZANv4A3iMH2nme4KYrj6rUeI+lcIaqh0rLCIiUNQiIgChtax/KUvY2P6
        gP2qc6lm+8pe2od/TiUA1mvvidR2dGP+zH96sXU4y1ATzmefY0fYunftpo/QWh8xk6REXMGQiIgCsdd8
        PudM/k97flNB/sWi1NT2rnt9KB3rD4z9BKmOuKn2qDa/NzMd69pn96rnVnU9HiVPycXtPjG+3tAXTp+L
        Stfv/wCi8trEegERFzBgIiIAL4ShVUazdONrao6V2WYnkB3842nl6R8Oa0qqlZLpRWUlFZZg6ydOPwku
        paZ3vcG0jx/ukeaP1Y+d3b6+RF3K641x6YicpOTywiIrkBERABWdqn0R2iK2dvVH+XaeJ3GQjkNzfE8i
        oxoDoqcQn61xTxkGU+lxEYPM8eQ7wr9ijDQGtADQAABkABkABwCQ1mowuiP1NqoZ3ZzREXLGQiIgAuEc
        gdexBsSDbmN4Ue070nbQU5cLGZ92wtPPi4j0W7z4DivmrphGHU5cSXPD5HE73GSR8hJ7TtXV+h9HX7le
        rfBTmn8m1iNUf1lvksa37Fa+qWO2GxH0nyn/ALjh9iprSOfpKupfznl9XSOt7FeeruHYw2mHOPa+U5z/
        AO5dDV7UxX7f0YVedkjREXMGQiIgCP6f0nS4dUttciMuHewiQfVVC4JV9DUwS3sGSxuPcHgn2XXpaoiD
        2ua7c4EHuIsV5fqqYxufG7ymOcx3e0lp9oXS0LzGURe5bpnqML6tVotX/hFJTy8XRMLvjWs72grarnNY
        eBhBEUI1jaZiiZ0MJBqnjv6Jp84j0j5o8eFjaEHOXSiJSSWWa7Wbpv0IdSUzvdiLSvB/wwfNafTI48B2
        nKoF9c4kkkkkkkk5kkm5JJ3knivi7dNKqjhCcpOTyERFqVCIiACzsEwqSrnZBELved/Bo85zuwD7BvKw
        mtJIABJJAAGZJOQAHEkq+dXmiYoIdqQA1MgBkPojhGDyHE8T3BYai9VR9+xeEOpm70fwaKjgZBEOq0Zk
        73OPlOd2k/dwWyRFxG23ljgREUAFh4tiUdNE+aV2zGwXJ58gBxJOQHMrIqJ2xtc97g1jQS5xNgAMySeA
        VDafaXuxCXZZcUzD7m05F53bbhz5DgDzJW9FDtljt3KTn0o1OlOPyV0755MhujZvDGjc0dvEniSey1/Y
        TEKajiachFA2/wDDGL/QvPuj1D+EVUENr7crAfi3u/5oKvPWJW9Dh1Qdxczox3yEM+hxPgm9WlmFaMqu
        8mee3yE3cd5uT3nMr01gdL0VPDH6EUbfU0D7F51wCi6eqgit5crAe7aG180Felwo18vLEKFyz6iIucMB
        ERABUBrMw7oMRmys2TZlb/ELO+e1yv8AVaa6cK2ooqkDON2w/wCK/wAknucLfxprRz6bV77GVqzEytTO
        JbdI+AnrQyGw+C/rD5236lYKoXVfjH4NXMDjaOYdG7lcm8Z+ULfxlXpWT9HG9+yXbLS7Zbm51gTYDiTZ
        Grr6bX77k1SzE0OnGlTMPh2snTvuImczxcfgtvn4DiqBq6l8r3SSOLpHklzjvJP/ADdwGSzMfxqWtndP
        Kc3eSBmGN81rewX38SSeK1y6OmoVUd+WL2T6mEREwUCIiACIpXq90UNfPtPHvaMgyH0zvEYPbvPId4VZ
        zUIuTJSbeESfVNojurp2/u7SPAyH6G+J5K1VxYwNAAAAAsAMgBwAC5LhW2uyXUxyMelYCIizLBcJpmsa
        XPIa1oJcSbAAZkkncF1V1bHCx0krwyNou5zjYD/nJUhp3pxJXuMUV2UoOQ3OlI3OfyHJvic7W2pola8L
        j1KTmoo7dYWm5rXGGEkUrT3GUjziODRwHieAEKRF2q641x6UKSbbyywNTeFdJVPqCOrCyzfjvy9jQ75Q
        W212Yp1YKYHMkyv7gCxl+8ucf4VLdBcEFDRMY+wkIMkx5OIBIJ+CAG/wqk9LcZ/DauWfzCbR9jG5N7r+
        V3uKRr/O1Dn2RtL4YY9SQ6oMO6WuMpHVhjLv4ndRvsL/AFK71CdU2D9BRCRws+c7Z7G7ox6ut/GpsldV
        PrtftsaVrEQiIlzQIiIALCxnDmVMEkD/ACZGlp7ORHaDY+CzUQnjdAeX66kkglfE+7ZI3FrrZWIO8H2g
        9oV+aCaRiupWvJ92ZZsw+EB5VuThmPEcFFtbeihePw2Ft3NFp2ji0bn25t3Hst6KrvRjSCWhnE0WY3SM
        JykbyPI8QeB7Lg9WaWpqTXKFU3XLHY3usvRQ0c5mjb72ldcW3RvOZYeQO9viOChi9HUNZS4nSkgCSGQb
        L2O3tPFrh5rhl7COBVLabaIyYfJxdTvPucnt2H8nD2jMcQJ0uoz+XPlBZDG64I0iInTIIi5RsLiGtBLi
        QGgZkkmwAHEkoAzsBweSsnZBEOs7eeDGjynO7B7TYcV6IwPCYqSFkEQs1o38XHi48yTmtJq/0UFBBd4B
        qJLGU8uTAeTb+JueSlS4+qv8SWFwhquHSssIi4vcALk2A3k8EoanJafSXSSnoY9uZ2ZvsMbm955Nb9py
        HNRHS3WdFFeOjtLJuMhzjb3fnD3Zdp3Kpq+ulnkMkz3Pkdvc4593IDsGQTtGjlPeey/7MZ2pbI22lmlc
        +IPvIdmJp6kTT1W9pPnO7T4WWhRF1IxUVhCzbe7CnOqrRr8JqPwiRvuMBBF9zpN7R/D5R7dlR/RTRyWv
        nEUeTBYyvtkxv2uPAce4FXdXVdLhFGMtmOMbMbB5Ujjc27XE3JPeSldVdheHHlmtcM/E+CPa29I+gg/B
        Yz7rMOvbe2PcfleT3bSrHRHAzXVUcGex5UpHBgtteu4aO1wWHjWKSVU0k8p67zc8mjcGjsAyV06stGfw
        Om25G2qJrOffexvmM8L3PaTyVXjTU47v+/8AAL8yfsTCNgaAAAABYAbgBuC5Ii5Q0EREAEREAEREAfCF
        TesfQU05dVUzfcDnIwf7Xwmj839Xu3XKvjm3FjuWtN0qpZRWcVJHnLRXSSagm6SPNpsJIyeq8fY4cHcO
        64V5UNZSYrSm1pIXiz2O8pp32cPNcMiCOwg7iq41h6AGDaqaRt4N8kYzMXNzRxj7PN7t0P0cx+ahlEsL
        ux7D5MjeTh9B3j1g9CyuOoj118mEZOD6ZcGz020Olw99xd9M49STl8F9tzu3cfYIwvQ+B41S4rTusA4E
        WmifYlt+DhxHJw5cxlVunWgUlEXTQ3fS7zxdF2O5t+F6+ZmjU5fRZsyJ1948EKVrap9EbAV07cyPe7Tw
        B3yHtI8nsz4i0X1daJmum25B72iI2/1jt4jH0u7MuKuXE8fpKQWmnjjsMmkjat2MGZ8Aq6u5/Lhz3Jqh
        /wAmbRfCVWuM62om3FLC6Q+nJ1G94b5R7jsqvsd0trKy4mmOwf8AbZ1GdxAzd/ESlq9HZLnY0lbFcFt6
        R6xaOlu1junlHmxkbIPwpNw7hc9iqnSXTGrrriR+zFwiZcN/i4vPflyAUfRdCrTQr35ZhKxyCIiYKBbf
        RnR2avl6KIWAt0jyOrGOZ5nk3j3XIztDtDZ8QdcXjpwevKRv5tjHnO9g48jb1RUUWDUoFthg8lozfK62
        e/NzjxJyHYEpfqen4IbyNIV53fByp4aTB6Pfsxtzc45vlefrPNshwHIBUppZpJLiE3SP6rBcRR8GN+1x
        4n7AE0q0mmxCXblNmC/Rxg9Vg+1x4u+gZKRau9BTVltRUtIpgbsacjMf/wA/rd2+ldcaF4lj3JlJzfTH
        gzNV+hfSltZUN9zBvAw+eRukI9EcOZz3AXt9cWNAAAFgNwHBclz7bXZLqYxGKisIIiLIsEREAEREAERE
        AEREAfCFVen+rvyqiibzMkI9roh9LPVyNqotKrZVyzErKKksM8x4ViU1LK2WF5ZI3jz5tcOINswVduhm
        nEOIN6N9o6m3WjO5+WZjJ8ofB3jtGaxNOdX0dXtTU9o6neRuZL8b0XfC9d94pqrpZaeQska6OVhGRyc0
        8CCPYR4FdFqvVR9Jff8AIv8AFW/Yt3TPQ+p6L8nyvjjFyaVjujabkklmzbMknquy5W3GnJYi1zmuaWvB
        O0CLOB47QOYPerN0N1nFtoa7MbmzgZj9o0b/AIw8RvKmGkmidJibBJcCQtHRzx2JI4XtlI3v8CFnC2VD
        6bFt6lnFT3iUAi3uk+iVVQH3Vu1FfqyszYeV/QPYfAlaJdCMlJZTMGmuQiLe6M6JVVe73JuzFfrSvyYO
        dvTPYPEhTKSistkpN8GjY0kgAEkmwAFySdwAGZPYrM0O1YudaWuGy3e2EHM/tCNw+CM+ZG5S7ANFqLCo
        zK5zdsDrzy2FuxvBg7BmeJKhul+s58l4qG7GbjMRZ7viNPkD4Rz7BvSMr7Ln01cepqoKO8iXaV6Z02Gs
        6GNrXzAWZEywbGLZbdvIHwRmfaqVxnF5quQyzv2nnwa0ei1vmt/4bnNdVHSS1EgZG10krybAZkniST35
        k+KuDQnV1HS7M1TaSoGbW72RHs9N3ad3DmpxXpll7v7/AII+Kx+xH9AtXRl2aitaRHkWQnIv5GQcG/B3
        njYZG3mNAFgLAbgOC+oufbbKx5kMRiorCCIiyLBERABERABERABERABERABERABaTSbRinr2bMzesAdi
        RuT2dx4jsOS3aKVJxeUQ1nk89aV6HVNASXjbhv1ZWjq9gePMPflyJXTozpVU0DvcX3jJu6J2bHcyB5ru
        0eN16JkjDgWuALSLEEXBHIg71W+lWq1kl5KIiN+8xO/wz8U72d2Y7l0a9XGa6bUYSqa3ib7RrTakxAdG
        bMlcLGGS3W5hpOUg7N/YtJpRquilvJRkQv8AzZv0Z7uMfhcdgVUYlh01PIY543RvHBw39oO5w7RdSvRj
        WPVUtmS+7wjg4+6NHwZOPc6/eFZ6aUPjpf0IVie00SnRXVdHHaStIkf+abfox8Y7392Q71s9JtYFLQjo
        oAJZWiwYywjjtwc4ZC3oi57lXmlOn9VWXY09DAfMYes4fDfvPcLDvWgwbBp6t/R08Ze7jbJrRzc45NH/
        AAIWncvjvf0DrS2gju0g0hqa1+3USXA8lgyYz4rftNz2ra6J6DVNdZ9uip/zjh5Q/Vt87v3dp3Kf6Kas
        4Ke0lURNMMw23uTT3Hyz2nLsU+AsqWaxRXTUiY1N7yNRo5o3T0LNiBlifKec3v8AjO+wWA5LcIi57k5P
        LN0sBERQSEREAEREAEREAEREAEXCaVrGlziGtaCXEmwAGZJJ3BYTccpTuqIT/wBVn3qcNgbBFgfjqm/S
        If5jPvXZBicD3BrJo3OO4Ne0k8dwKMMMmWiw6nFII3bMk0THei57Wn1E3XD8dU36RD/MZ96MMjJnosAY
        zTEgCoiJcQGgSMuSTYAC+ZPJc63FIIS1ss0cZffZD3tbtWte1znbaHrRhhlGYiwPx1TfpEP8xn3p+Oab
        9Ih/mM+9HS/QnJyxbCYKpnRzxtkZyIzHa072ntCq3SbVXIy76J3SN/NPIDx8V+53cbHtKtD8dU1wPwiG
        7iA0dIy5JNgAL5kngudRisEbtmSaJjt+y57Wn1ErWu2yt/D/AAUlGMuSsNFtVj32krnbDd/RMPWPx3jJ
        vc257QrRw7D4qdgjhjaxg3NaLDvPM9pXV+Oqb9Ih/mM+9BjVNcAVEV3EBo6RlySbAAXzJPBFttljzIIx
        jHgz0RcXvDRckADeTkB4rEuckWmm0soGGzquAHl0jT9BXZS6SUcpsyqgceQkZf1XVuiXoRlG1RdM9Uxj
        dt72tZl1nOAbnuzOSxfx5S/pMP8ANZ96jDJybBF00tXHKNqN7Xtva7HBwvyuOOa66rEoYiBJLGwkXAe9
        rSRzAJUYAykWvOO0o/8Acw/zWfes8G6nDQH1ERQB/9k=
</value>
  </data>
</root>